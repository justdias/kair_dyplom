import { Controller, Put, Post, Param, Body } from '@nestjs/common';
import { AuthService } from './auth.service';
import { UsersService } from '../users/users.service';
import { UpdateRoleDto } from '../users/dto/update-role.dto';
import { LoginUserDto } from '../users/dto/login-user.dto'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º DTO –¥–ª—è –ª–æ–≥–∏–Ω–∞
import { CreateUserDto } from '../users/dto/create-user.dto';

@Controller('auth')
export class AuthController {
  constructor(
    private readonly authService: AuthService,
    private readonly usersService: UsersService,
  ) {}

  @Put('assign-role/:userId')
  async assignRole(
    @Param('userId') userId: string, // –ü–∞—Ä–∞–º–µ—Ç—Ä —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä–æ–∫–∞
    @Body() updateRoleDto: UpdateRoleDto,
  ) {
    return this.usersService.updateRole(userId, updateRoleDto); // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  }

  @Post('login')
  async login(@Body() loginUserDto: LoginUserDto) {
    return this.authService.login(loginUserDto); // –í—ã–∑–æ–≤ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –ª–æ–≥–∏–Ω–∞
  }

  @Post('register')  // üî• –¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: /auth/register
  async register(@Body() createUserDto: CreateUserDto) {
    return this.authService.register(createUserDto);
  }
}
